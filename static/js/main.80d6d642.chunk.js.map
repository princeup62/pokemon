{"version":3,"sources":["components/services/Actions/action.js","App.js","reportWebVitals.js","components/services/Reducers/reducer.js","components/services/Reducers/index.js","index.js"],"names":["addToCart","data","type","payload","App","holderState","useSelector","state","cartItems","useState","inputItem","setInputItem","dispatch","useDispatch","console","log","className","src","avatar","alt","name","height","weight","id","onClick","num","parseInt","a","fetch","response","json","sprites","back_default","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","store","createStore","rootreducer","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAMA,EAAY,SAACC,GACjB,MAAO,CACLC,KAAM,cACNC,QAASF,I,OCmCEG,MAjCf,WACE,IAAMC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACjD,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,cAIjB,OAFAC,QAAQC,IAAIV,GAGV,qCACE,sBAAKW,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAYC,IAAKZ,EAAYa,OAAQC,IAAI,KACxD,wCAAWd,EAAYe,QACvB,0CAAaf,EAAYgB,UACzB,0CAAahB,EAAYiB,UACzB,6BAAKjB,EAAYkB,QAGnB,uBACA,uBAEA,wBACEC,QAAS,WDpBe,IAACC,ECqBvBd,EAAaD,EAAY,GACzBE,GDtBuBa,ECsBGC,SAAShB,GDrB3C,uCAAO,WAAgBE,GAAhB,iBAAAe,EAAA,sEACkBC,MAAM,qCAAD,OAAsCH,IAD7D,cACCI,EADD,gBAEcA,EAASC,OAFvB,cAEC7B,EAFD,OAGLa,QAAQC,IAAId,GAHP,SAICW,EACJZ,EAAU,CACRoB,KAAMnB,EAAKmB,KACXC,OAAQpB,EAAKoB,OACbC,OAAQrB,EAAKqB,OACbJ,OAAQjB,EAAK8B,QAAQC,aACrBT,GAAItB,EAAKsB,MAVR,2CAAP,yDCkBI,6BCdSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCPRQ,EAAe,GCGNC,kBAAgB,CAAEnC,UDDlB,WAAkD,IAA/BD,EAA8B,uDAAtBmC,EAAcE,EAAQ,uCAC9D,OAAQA,EAAO1C,MACb,IAAK,cACH,OAAO0C,EAAOzC,QAGhB,QACE,OAAOI,M,QECPsC,EAAQC,YAAYC,EAAaC,YAAgBC,MAEvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.80d6d642.chunk.js","sourcesContent":["const addToCart = (data) => {\r\n  return {\r\n    type: \"ADD_TO_CART\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fetchPlaceHolder = (num) => {\r\n  return async function (dispatch) {\r\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${num}`);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    await dispatch(\r\n      addToCart({\r\n        name: data.name,\r\n        height: data.height,\r\n        weight: data.weight,\r\n        avatar: data.sprites.back_default,\r\n        id: data.id,\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport default addToCart;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchPlaceHolder } from \"./components/services/Actions/action\";\n\nfunction App() {\n  const holderState = useSelector((state) => state.cartItems);\n  const [inputItem, setInputItem] = useState(1);\n\n  const dispatch = useDispatch();\n\n  console.log(holderState);\n\n  return (\n    <>\n      <div className=\"card\">\n        <img className=\"size-zoom\" src={holderState.avatar} alt=\"\" />\n        <h1>Name: {holderState.name}</h1>\n        <h2>Height: {holderState.height}</h2>\n        <h2>Weight: {holderState.weight}</h2>\n        <h1>{holderState.id}</h1>\n      </div>\n\n      <br />\n      <br />\n\n      <button\n        onClick={() => {\n          setInputItem(inputItem + 1);\n          dispatch(fetchPlaceHolder(parseInt(inputItem)));\n        }}\n      >\n        Add to cart\n      </button>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {};\r\n\r\nexport default function cartItems(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\":\r\n      return action.payload;\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cartItems from \"../Reducers/reducer\";\r\n\r\nexport default combineReducers({ cartItems });\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootreducer from \"../src/components/services/Reducers/index\";\nimport ReduxThunk from \"redux-thunk\";\n\nconst store = createStore(rootreducer, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}